{"version":3,"file":"static/js/116.a4e707c1.chunk.js","mappings":"0OAiFA,UAtEkB,WAAO,IAAD,QACtB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE1CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMR,GAAN,wFACIS,EAAAA,EAAAA,IAAaT,GADjB,OACXU,EADW,OAGjBf,EAASe,GACTb,EAASa,EAAOC,QAChBZ,EAAU,mCAAD,OAAoCW,EAAOE,cALnC,2CAAH,sDAOhBJ,EAAWR,EACZ,GAAE,CAACA,IASJ,OACE,iCACE,SAAC,KAAD,CAAMa,GAAIT,EAAV,UACE,mBAAQU,KAAK,SAAb,wBAEF,4BACE,yBACyB,OAAtBpB,EAAMkB,aACL,gBAAKG,IAAKjB,EAAQkB,IAAI,MAEtB,gBAAKD,IAAKE,EAAKD,IAAI,QAGvB,4BACE,0BACGtB,EAAMwB,eADT,KAC2BC,WAAWzB,EAAM0B,cAD5C,QAGA,yCAAsC,GAArB1B,EAAM2B,cAAmBC,UAA1C,QACA,sCACA,uBAAI5B,EAAM6B,YACV,oCACA,uBA5BU,SAAA3B,GAChB,GAAKA,EAIL,OADaA,EAAM4B,KAAI,SAAA5B,GAAK,OAAIA,EAAM6B,IAAV,IAChBC,KAAK,IAClB,CAsBWC,CAAU/B,YAGlB,4BACE,oDACA,2BACE,eAAIgC,UAAU,aAAd,UACE,SAAC,KAAD,CAASf,GAAG,OAAOR,MAAO,CAAEC,KAAI,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,MAAnD,qBAIF,eAAIsB,UAAU,aAAd,UACE,SAAC,KAAD,CAASf,GAAG,UAAUR,MAAO,CAAEC,KAAI,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,MAAtD,8BAMN,SAAC,KAAD,MAGL,C,8IC7EYuB,EAAQ,mCAAG,WAAMC,GAAN,kFAChBC,EAAS,CAAEC,QAAS,oCADJ,SAECC,EAAAA,EAAAA,IAAA,gEACoCH,GACzD,CAAEC,OAAAA,IAJkB,uBAEdG,EAFc,EAEdA,KAFc,kBAOfA,GAPe,2CAAH,sDAURzB,EAAY,mCAAG,WAAMT,GAAN,kFACpB+B,EAAS,CACbC,QAAS,oCAFe,SAIHC,EAAAA,EAAAA,IAAA,6CAAgDjC,GAAM,CAC3E+B,OAAAA,IALwB,uBAIlBG,EAJkB,EAIlBA,KAJkB,kBAOnBA,GAPmB,2CAAH,sDA4BZC,EAAc,mCAAG,WAAOC,EAAON,GAAd,kFACtBC,EAAS,CAAEC,QAAS,mCAAoCI,MAAOA,GADzC,SAELH,EAAAA,EAAAA,IAAA,yDAC6BH,GAClD,CAAEC,OAAAA,IAJwB,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAMrBA,GANqB,2CAAH,uD","sources":["components/MovieCard/MovieCard.jsx","components/servises/movieAPI.js"],"sourcesContent":["import {\n  useParams,\n  useLocation,\n  Link,\n  Outlet,\n  NavLink,\n} from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { getMovieByID } from 'components/servises/movieAPI';\nimport img from '../../images/no-image-placeholder.png';\n\nconst MovieCard = () => {\n  const [movie, setMovie] = useState({});\n  const [genre, setGenre] = useState([]);\n  const [poster, setPoster] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async id => {\n      const result = await getMovieByID(id);\n\n      setMovie(result);\n      setGenre(result.genres);\n      setPoster(`https://image.tmdb.org/t/p/w300/${result.poster_path}`);\n    };\n    fetchMovie(id);\n  }, [id]);\n\n  const genreList = genre => {\n    if (!genre) {\n      return;\n    }\n    const list = genre.map(genre => genre.name);\n    return list.join(' ');\n  };\n  return (\n    <>\n      <Link to={backLink}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      <div>\n        <div>\n          {movie.poster_path !== null ? (\n            <img src={poster} alt=\"\"></img>\n          ) : (\n            <img src={img} alt=\"\"></img>\n          )}\n        </div>\n        <div>\n          <h1>\n            {movie.original_title} ({parseFloat(movie.release_date)})\n          </h1>\n          <p>User score: {(movie.vote_average * 10).toFixed()}&#37;</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{genreList(genre)}</p>\n        </div>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li className=\"additional\">\n            <NavLink to=\"cast\" state={{ from: location?.state?.from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li className=\"additional\">\n            <NavLink to=\"reviews\" state={{ from: location?.state?.from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieCard;\n","import axios from 'axios';\n\nexport const movieAPI = async page => {\n  const params = { api_key: '17d8222ac7770cbf237f3abe7092e221' };\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?page=${page}`,\n    { params }\n  );\n\n  return data;\n};\n\nexport const getMovieByID = async id => {\n  const params = {\n    api_key: '17d8222ac7770cbf237f3abe7092e221',\n  };\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params,\n  });\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const params = { api_key: '17d8222ac7770cbf237f3abe7092e221' };\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    { params }\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const params = { api_key: '17d8222ac7770cbf237f3abe7092e221' };\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    { params }\n  );\n  return data;\n};\n\nexport const getMovieSearch = async (query, page) => {\n  const params = { api_key: '17d8222ac7770cbf237f3abe7092e221', query: query };\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?page=${page}`,\n    { params }\n  );\n  return data;\n};\n"],"names":["useState","movie","setMovie","genre","setGenre","poster","setPoster","id","useParams","location","useLocation","backLink","state","from","useEffect","fetchMovie","getMovieByID","result","genres","poster_path","to","type","src","alt","img","original_title","parseFloat","release_date","vote_average","toFixed","overview","map","name","join","genreList","className","movieAPI","page","params","api_key","axios","data","getMovieSearch","query"],"sourceRoot":""}